# ILMBASE try-compile CMakeLists.txt

# use explit include paths and library:
# cmake '-UILMBASE_*' -DILMBASE_INCLUDE_DIR:STRING=<path/to/ILMBASE_include_dir> 
#  -DALEMBIC_ILMBASE_HALF_LIB:FILEPATH=<path/to/ILMBASE_Half_library> .
#
# '-UILMBASE_*' removes any ILMBASE_* entries from the cache so it can be run
# multiple times without breaking the rest of the cached entries

# -------------------------------------------------------------------------------------

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(ILMBASE_TRYCOMPILE)

SET(CMAKE_VERBOSE_MAKEFILE TRUE)

IF(DEFINED ALEMBIC_ILMBASE_INCLUDE_DIRECTORY)
  IF(DEFINED ALEMBIC_ILMBASE_HALF_LIB )
      MESSAGE(STATUS "Using ALEMBIC_ILMBASE_HALF_LIB: ${ALEMBIC_ILMBASE_HALF_LIB}" )
      MESSAGE(STATUS "Using ALEMBIC_ILMBASE_INCLUDE_DIRECTORY: ${ALEMBIC_ILMBASE_INCLUDE_DIRECTORY}" )

    # TODO: TAILOR FOR CROSS-COMPILING CASES, see: http://www.cmake.org/cmake/help/cmake-2-8-docs.html
    MESSAGE( STATUS "COMPILING ILMBASE TRY COMPILE EXECUTABLE IN ${PROJECT_BINARY_DIR}. WITH ${ALEMBIC_ILMBASE_HALF_LIB}")

    # Added -lm to the front to work around a bug in CMake TRY_RUN that doesn't
    # accept a string variable to LINK_LIBRARIES

    # TODO: fix name of variable ILMBASE_LIBRARY_DIR
    SET(TRYCOMPILE_LIBS "-lm ${ALEMBIC_ILMBASE_HALF_LIB}")
    SET(USING_THESE_LIBS "-DLINK_LIBRARIES:INTERNAL=${TRYCOMPILE_LIBS}")
    TRY_RUN(ILMBASE_RUN_RESULT ILMBASE_COMPILE_RESULT
            ${PROJECT_BINARY_DIR} ${PROJECT_SOURCE_DIR}/ilmbase_trycompile.cpp 
            CMAKE_FLAGS ${USING_THESE_LIBS}
            COMPILE_DEFINITIONS "-I${ALEMBIC_ILMBASE_INCLUDE_DIRECTORY}"
            COMPILE_OUTPUT_VARIABLE ILMBASE_COMPILE_OUTPUT
            RUN_OUTPUT_VARIABLE ILMBASE_RUN_OUTPUT
            )

    IF(NOT ILMBASE_COMPILE_RESULT)
      MESSAGE( FATAL_ERROR "FAILED TO COMPILE A WORKING ILMBASE TRY COMPILE EXECUTABLE.\nCOMPILE LOG:\n${ILMBASE_COMPILE_OUTPUT}")
    ELSE()
      MESSAGE( STATUS "COMPILED A WORKING ILMBASE TRY COMPILE EXECUTABLE.\nCOMPILE LOG:\n${ILMBASE_COMPILE_OUTPUT}")
    ENDIF()

    IF(ILMBASE_RUN_RESULT STREQUAL "FAILED_TO_RUN")
      MESSAGE( FATAL_ERROR "FAILED TO RUN A WORKING ILMBASE TRY COMPILE EXECUTABLE.\nERROR LOG:\n${ILMBASE_RUN_OUTPUT}")
    ELSE()
      MESSAGE( STATUS "SUCCESSFULY RAN A WORKING ILMBASE TRY COMPILE EXECUTABLE.\nLOG:\n${ILMBASE_RUN_OUTPUT}")
    ENDIF()

  ELSE()
    MESSAGE(FATAL_ERROR "ILMBASE not correctly specified")
  ENDIF()
ELSE()
  MESSAGE(FATAL_ERROR "ILMBASE not correctly specified")
ENDIF()
